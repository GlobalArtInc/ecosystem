"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[447],{1134:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(3917);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},9392:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"packages/nestjs-swagger","title":"NestJS Swagger","description":"Streamline OpenAPI documentation generation with intuitive decorators and pre-configured error descriptions.","source":"@site/content/packages/nestjs-swagger.mdx","sourceDirName":"packages","slug":"/packages/nestjs-swagger","permalink":"/packages/nestjs-swagger","draft":false,"unlisted":false,"editUrl":"https://github.com/GlobalArtInc/ecosystem/tree/main/docs/content/packages/nestjs-swagger.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Packages Overview","permalink":"/packages"},"next":{"title":"NestJS TypeORM Pagination","permalink":"/packages/nestjs-typeorm-pagination"}}');var t=r(1273),i=r(1134);const o={sidebar_position:1},a="NestJS Swagger",d={},c=[{value:"Installation",id:"installation",level:2},{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"SwaggerDocumentation Options",id:"swaggerdocumentation-options",level:3},{value:"Pre-configured Error Descriptions",id:"pre-configured-error-descriptions",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Response DTOs",id:"response-dtos",level:3},{value:"Array Responses",id:"array-responses",level:3},{value:"Paginated Responses",id:"paginated-responses",level:3},{value:"Paginated Response Structure",id:"paginated-response-structure",level:2},{value:"Best Practices",id:"best-practices",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"nestjs-swagger",children:"NestJS Swagger"})}),"\n",(0,t.jsx)(n.p,{children:"Streamline OpenAPI documentation generation with intuitive decorators and pre-configured error descriptions."}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install @globalart/nestjs-swagger\n"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@globalart/nestjs-swagger"})," package provides a unified ",(0,t.jsx)(n.code,{children:"SwaggerDocumentation"})," decorator that simplifies endpoint documentation in NestJS applications. It eliminates boilerplate code while ensuring consistent API documentation across your application."]}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Simple Decorator"})," - Single decorator for complete endpoint documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pre-configured Errors"})," - Standard HTTP error descriptions included"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response Types"})," - Support for arrays, pagination, and custom DTOs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type Safety"})," - Full TypeScript support with IntelliSense"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get } from '@nestjs/common';\nimport { SwaggerDocumentation, ERROR_DESCRIPTIONS } from '@globalart/nestjs-swagger';\n\n@Controller('users')\nexport class UsersController {\n  @Get()\n  @SwaggerDocumentation({\n    endpointDescription: 'Retrieve all users from the system',\n    endpointSummary: 'Get users',\n    error401Description: ERROR_DESCRIPTIONS.UNAUTHORIZED,\n    error500Description: ERROR_DESCRIPTIONS.INTERNAL_SERVER_ERROR\n  })\n  async getAllUsers() {\n    return [];\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.h3,{id:"swaggerdocumentation-options",children:"SwaggerDocumentation Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"endpointDescription"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"Detailed endpoint description"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"endpointSummary"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"Brief endpoint summary"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"responseDto"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Function"})}),(0,t.jsx)(n.td,{children:"\u274c"}),(0,t.jsx)(n.td,{children:"Response DTO class"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isArray"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"\u274c"}),(0,t.jsx)(n.td,{children:"Response is an array"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isPaginated"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"\u274c"}),(0,t.jsx)(n.td,{children:"Response is paginated"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"error[code]Description"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"\u274c"}),(0,t.jsx)(n.td,{children:"Custom error descriptions"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"pre-configured-error-descriptions",children:"Pre-configured Error Descriptions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'ERROR_DESCRIPTIONS = {\n  BAD_REQUEST: "Invalid request data or parameters",\n  UNAUTHORIZED: "Authentication required",\n  FORBIDDEN: "Access denied", \n  NOT_FOUND: "Resource not found",\n  CONFLICT: "Resource conflict detected",\n  UNPROCESSABLE_ENTITY: "Validation error",\n  RATE_LIMIT_EXCEEDED: "Rate limit exceeded",\n  INTERNAL_SERVER_ERROR: "Internal server error",\n  SERVICE_UNAVAILABLE: "Service unavailable"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,t.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get } from '@nestjs/common';\nimport { SwaggerDocumentation, ERROR_DESCRIPTIONS } from '@globalart/nestjs-swagger';\n\n@Controller()\nexport class AppController {\n  @Get('hello')\n  @SwaggerDocumentation({\n    endpointDescription: 'Returns a greeting message',\n    endpointSummary: 'Get greeting',\n    error500Description: ERROR_DESCRIPTIONS.INTERNAL_SERVER_ERROR\n  })\n  async hello() {\n    return { message: 'Hello World' };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"response-dtos",children:"Response DTOs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDto {\n  @ApiProperty({ example: 1 })\n  id: number;\n\n  @ApiProperty({ example: 'John Doe' })\n  name: string;\n\n  @ApiProperty({ example: 'john@example.com' })\n  email: string;\n}\n\n@Controller('users')\nexport class UsersController {\n  @Get(':id')\n  @SwaggerDocumentation({\n    endpointDescription: 'Retrieve user by unique identifier',\n    endpointSummary: 'Get user by ID',\n    responseDto: UserDto,\n    error404Description: ERROR_DESCRIPTIONS.NOT_FOUND,\n    error500Description: ERROR_DESCRIPTIONS.INTERNAL_SERVER_ERROR\n  })\n  async getUserById(@Param('id') id: number): Promise<UserDto> {\n    return this.userService.findById(id);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"array-responses",children:"Array Responses"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Controller('users')\nexport class UsersController {\n  @Get()\n  @SwaggerDocumentation({\n    endpointDescription: 'Retrieve all users in the system',\n    endpointSummary: 'List all users',\n    responseDto: UserDto,\n    isArray: true,\n    error500Description: ERROR_DESCRIPTIONS.INTERNAL_SERVER_ERROR\n  })\n  async getAllUsers(): Promise<UserDto[]> {\n    return this.userService.findAll();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"paginated-responses",children:"Paginated Responses"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Controller('users')\nexport class UsersController {\n  @Get()\n  @SwaggerDocumentation({\n    endpointDescription: 'Retrieve users with pagination support',\n    endpointSummary: 'Get paginated users',\n    responseDto: UserDto,\n    isPaginated: true,\n    error400Description: ERROR_DESCRIPTIONS.BAD_REQUEST,\n    error500Description: ERROR_DESCRIPTIONS.INTERNAL_SERVER_ERROR\n  })\n  async getPaginatedUsers(@Query() query: PaginationDto): Promise<PaginatedResponse<UserDto>> {\n    return this.userService.findPaginated(query);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"paginated-response-structure",children:"Paginated Response Structure"}),"\n",(0,t.jsxs)(n.p,{children:["When using ",(0,t.jsx)(n.code,{children:"isPaginated: true"}),", responses follow this structure:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface PaginatedResponse<T> {\n  data: T[];           // Array of items\n  totalCount: number;  // Total records\n  offset: number;      // Current offset\n  limit: number;       // Items per page\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Consistent Errors"})," - Use ",(0,t.jsx)(n.code,{children:"ERROR_DESCRIPTIONS"})," for standardized error messages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clear Descriptions"})," - Write descriptive summaries and detailed descriptions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type Safety"})," - Always define response DTOs with proper typing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Relevant Errors"})," - Document only the errors your endpoint actually returns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pagination"})," - Use ",(0,t.jsx)(n.code,{children:"isPaginated"})," for endpoints returning large datasets"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);